<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">

    <!-- 글 등록 -->
    <insert id="insertBoard" parameterType="com.spring.app.board.domain.BoardDTO">
        INSERT INTO tbl_board (
            board_seq,
            fk_board_type_seq,
            fk_board_category_seq,
            fk_member_seq,
            board_title,
            board_content,
            board_regdate,
            board_readcount,
            board_password,
            board_file_ori_name,
            board_file_save_name,
            board_file_size
        ) VALUES (
            board_seq.NEXTVAL,
            #{fkBoardTypeSeq, jdbcType=NUMERIC},
            #{fkBoardCategorySeq, jdbcType=NUMERIC},
            #{fkMemberSeq, jdbcType=NUMERIC},
            #{boardTitle, jdbcType=VARCHAR},
            #{boardContent, jdbcType=VARCHAR},
            SYSDATE,
            0,
            #{boardPassword, jdbcType=VARCHAR},
            #{boardFileOriName, jdbcType=VARCHAR},
            #{boardFileSaveName, jdbcType=VARCHAR},
            #{boardFileSize, jdbcType=NUMERIC}
        )
    </insert>

    <!-- 게시판 타입 목록 -->
    <select id="getBoardTypeList" resultType="hashmap">
        SELECT board_type_seq   AS boardTypeSeq,
               board_type_name  AS boardTypeName
        FROM tbl_board_type
        ORDER BY board_type_seq
    </select>

    <!-- 게시판 카테고리 목록 -->
    <select id="getBoardCategoryList" resultType="hashmap">
        SELECT board_category_seq   AS boardCategorySeq,
               board_category_name  AS boardCategoryName
        FROM tbl_board_category
        ORDER BY board_category_seq
    </select>

    <!-- 게시글 목록 -->
    <select id="selectBoardList" parameterType="map" resultType="com.spring.app.board.domain.BoardDTO">
        SELECT 
            b.board_seq AS boardSeq,
            b.fk_board_type_seq AS fkBoardTypeSeq,
            b.fk_board_category_seq AS fkBoardCategorySeq,
            b.fk_member_seq AS fkMemberSeq,
            b.board_title AS boardTitle,
            b.board_content AS boardContent,
            b.board_regdate AS boardRegdate,
            b.board_readcount AS boardReadcount,
            b.board_password AS boardPassword,
            b.board_file_ori_name AS boardFileOriName,
            b.board_file_save_name AS boardFileSaveName,
            b.board_file_size AS boardFileSize,
            m.member_name AS memberName,
            c.board_category_name AS boardCategoryName,
            (SELECT COUNT(*) FROM tbl_comment cm WHERE cm.fk_board_seq = b.board_seq) AS commentCount
        FROM tbl_board b
        LEFT JOIN tbl_member m ON b.fk_member_seq = m.member_seq
        LEFT JOIN tbl_board_category c ON b.fk_board_category_seq = c.board_category_seq
        WHERE 1=1
        <if test="fkBoardTypeSeq != null">
            AND b.fk_board_type_seq = #{fkBoardTypeSeq}
        </if>
        <if test="fkBoardCategorySeq != null and fkBoardCategorySeq != ''">
            AND b.fk_board_category_seq = #{fkBoardCategorySeq}
        </if>
        <if test="searchWord != null and searchWord != ''">
            <choose>
                <when test="searchType == 'boardTitle'">
                    AND b.board_title LIKE '%' || #{searchWord} || '%'
                </when>
                <when test="searchType == 'boardContent'">
                    AND b.board_content LIKE '%' || #{searchWord} || '%'
                </when>
                <when test="searchType == 'titleContent'">
                    AND (b.board_title LIKE '%' || #{searchWord} || '%' 
                     OR b.board_content LIKE '%' || #{searchWord} || '%')
                </when>
                <when test="searchType == 'memberName'">
                    AND m.member_name LIKE '%' || #{searchWord} || '%'
                </when>
            </choose>
        </if>
        ORDER BY b.board_seq DESC
    </select>

    <!-- 게시글 총 개수 -->
<select id="getTotalCount" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM tbl_board b
    LEFT JOIN tbl_member m ON b.fk_member_seq = m.member_seq
    WHERE 1=1
    <if test="fkBoardTypeSeq != null">
        AND b.fk_board_type_seq = #{fkBoardTypeSeq}
    </if>
    <if test="fkBoardCategorySeq != null and fkBoardCategorySeq != ''">
        AND b.fk_board_category_seq = #{fkBoardCategorySeq}
    </if>
    <!-- 부서 조건 추가 -->
    <if test="fkDepartmentSeq != null and fkDepartmentSeq != ''">
        AND m.fk_department_seq = #{fkDepartmentSeq}
    </if>
    <if test="searchWord != null and searchWord != ''">
        <choose>
            <when test="searchType == 'boardTitle'">
                AND b.board_title LIKE '%' || #{searchWord} || '%'
            </when>
            <when test="searchType == 'boardContent'">
                AND b.board_content LIKE '%' || #{searchWord} || '%'
            </when>
            <when test="searchType == 'titleContent'">
                AND (b.board_title LIKE '%' || #{searchWord} || '%' 
                     OR b.board_content LIKE '%' || #{searchWord} || '%')
            </when>
            <when test="searchType == 'memberName'">
                AND m.member_name LIKE '%' || #{searchWord} || '%'
            </when>
        </choose>
    </if>
</select>

    <!-- 페이징된 게시글 목록 -->
<select id="boardListSearch_withPaging" parameterType="map" resultType="com.spring.app.board.domain.BoardDTO">
    SELECT * FROM (
        SELECT ROWNUM AS rno, V.*
        FROM (
            SELECT 
    b.board_seq AS boardSeq,
    b.fk_board_type_seq AS fkBoardTypeSeq,
    b.fk_board_category_seq AS fkBoardCategorySeq,
    b.fk_member_seq AS fkMemberSeq,
    b.board_title AS boardTitle,
    b.board_content AS boardContent,
    b.board_regdate AS boardRegdate,
    b.board_readcount AS boardReadcount,
    b.board_file_ori_name AS boardFileOriName,
    b.board_file_save_name AS boardFileSaveName,
    b.board_file_size AS boardFileSize,
    m.member_name AS memberName,
    c.board_category_name AS boardCategoryName,
    (SELECT COUNT(*) FROM tbl_comment cm WHERE cm.fk_board_seq = b.board_seq) AS commentCount
	FROM tbl_board b
	LEFT JOIN tbl_member m ON b.fk_member_seq = m.member_seq
	LEFT JOIN tbl_board_category c ON b.fk_board_category_seq = c.board_category_seq
			WHERE 1=1
			<if test="fkBoardTypeSeq != null">
			    AND b.fk_board_type_seq = #{fkBoardTypeSeq, jdbcType=NUMERIC}
			</if>
			<if test="fkBoardCategorySeq != null and fkBoardCategorySeq != ''">
			    AND b.fk_board_category_seq = #{fkBoardCategorySeq, jdbcType=NUMERIC}
			</if>
			<if test="fkDepartmentSeq != null and fkDepartmentSeq != ''">
			    AND m.fk_department_seq = #{fkDepartmentSeq, jdbcType=NUMERIC}
			</if>

            <if test="searchWord != null and searchWord != ''">
                <choose>
                    <when test="searchType == 'boardTitle'">
                        AND b.board_title LIKE '%' || #{searchWord, jdbcType=VARCHAR} || '%'
                    </when>
                    <when test="searchType == 'boardContent'">
                        AND b.board_content LIKE '%' || #{searchWord, jdbcType=VARCHAR} || '%'
                    </when>
                    <when test="searchType == 'titleContent'">
                        AND (b.board_title LIKE '%' || #{searchWord, jdbcType=VARCHAR} || '%'
                         OR b.board_content LIKE '%' || #{searchWord, jdbcType=VARCHAR} || '%')
                    </when>
                    <when test="searchType == 'memberName'">
                        AND m.member_name LIKE '%' || #{searchWord, jdbcType=VARCHAR} || '%'
                    </when>
                </choose>
            </if>
            ORDER BY b.board_seq DESC
        ) V
    )
    WHERE rno BETWEEN #{startRno, jdbcType=NUMERIC} AND #{endRno, jdbcType=NUMERIC}
</select>

	<!-- 조회수 증가 -->
<update id="updateReadCount" parameterType="string">
    UPDATE tbl_board
    SET board_readcount = board_readcount + 1
    WHERE board_seq = #{boardSeq}
</update>

<!-- 게시글 상세 조회 -->
<select id="getBoardDetail" parameterType="string" resultType="com.spring.app.board.domain.BoardDTO">
    SELECT 
        b.board_seq AS boardSeq,
        b.fk_board_type_seq AS fkBoardTypeSeq,
        b.fk_board_category_seq AS fkBoardCategorySeq,
        b.fk_member_seq AS fkMemberSeq,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.board_regdate AS boardRegdate,
        b.board_readcount AS boardReadcount,
        b.board_password AS boardPassword,
        b.board_file_ori_name AS boardFileOriName,
        b.board_file_save_name AS boardFileSaveName,
        b.board_file_size AS boardFileSize,
        m.member_name AS memberName,
        c.board_category_name AS boardCategoryName
    FROM tbl_board b
    LEFT JOIN tbl_member m ON b.fk_member_seq = m.member_seq
    LEFT JOIN tbl_board_category c ON b.fk_board_category_seq = c.board_category_seq
    WHERE b.board_seq = #{boardSeq}
</select>

 <!-- 부서명 조회 -->
    <select id="getDepartmentNameBySeq" parameterType="int" resultType="string">
        SELECT department_name
        FROM tbl_department
        WHERE department_seq = #{fkDepartmentSeq}
    </select>



<!-- 이전글 -->
<select id="getPrevBoard" parameterType="string" resultType="com.spring.app.board.domain.BoardDTO">
    SELECT 
        b.board_seq AS boardSeq,
        b.board_title AS boardTitle
    FROM tbl_board b
    WHERE b.board_seq = (
        SELECT MAX(board_seq) 
        FROM tbl_board 
        WHERE board_seq &lt; #{boardSeq}
    )
</select>

<!-- 다음글 -->
<select id="getNextBoard" parameterType="string" resultType="com.spring.app.board.domain.BoardDTO">
    SELECT 
        b.board_seq AS boardSeq,
        b.board_title AS boardTitle
    FROM tbl_board b
    WHERE b.board_seq = (
        SELECT MIN(board_seq) 
        FROM tbl_board 
        WHERE board_seq &gt; #{boardSeq}
    )
</select>


<!-- 최근 작성된 공지사항 5개 블러오기 (index) -->

<select id="getRecentNotices" parameterType="map" resultType="com.spring.app.board.domain.BoardDTO">
  SELECT * FROM (
    SELECT b.board_seq,
           b.board_title,
           b.board_regdate,
           c.board_category_name AS boardCategoryName,
           m.member_name,
           ROW_NUMBER() OVER (ORDER BY b.board_regdate DESC) AS rnum
    FROM tbl_board b
    JOIN tbl_board_category c ON b.fk_board_category_seq = c.board_category_seq
    JOIN tbl_member m   ON b.fk_member_seq = m.member_seq
    WHERE b.fk_board_category_seq = #{fkBoardCategorySeq}
      AND b.fk_board_type_seq   = #{fkBoardTypeSeq}
      <if test="fkDepartmentSeq != null">
        AND m.fk_department_seq = #{fkDepartmentSeq}
      </if>
  ) V
  WHERE V.rnum &lt;= 5
</select>

<!-- 글 수정 -->
<update id="updateBoard" parameterType="com.spring.app.board.domain.BoardDTO">
    UPDATE tbl_board
    SET
        fk_board_type_seq = #{fkBoardTypeSeq, jdbcType=NUMERIC},
        fk_board_category_seq = #{fkBoardCategorySeq, jdbcType=NUMERIC},
        board_title = #{boardTitle, jdbcType=VARCHAR},
        board_content = #{boardContent, jdbcType=VARCHAR},
        board_file_ori_name = #{boardFileOriName, jdbcType=VARCHAR},
        board_file_save_name = #{boardFileSaveName, jdbcType=VARCHAR},
        board_file_size = #{boardFileSize, jdbcType=NUMERIC}
    WHERE board_seq = #{boardSeq, jdbcType=NUMERIC}
</update>




<!-- 글 삭제 -->
<delete id="delete" parameterType="string">
    DELETE FROM tbl_board
    WHERE board_seq = #{boardSeq}
</delete>
</mapper>
